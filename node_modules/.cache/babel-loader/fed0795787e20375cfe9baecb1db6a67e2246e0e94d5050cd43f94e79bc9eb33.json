{"ast":null,"code":"var _jsxFileName = \"E:\\\\invoice-generator\\\\src\\\\components\\\\InvoiceForm.js\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport InvoiceItem from './InvoiceItem';\nimport InvoiceModal from './InvoiceModal';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass InvoiceForm extends Component {\n  constructor(props) {\n    super(props);\n    // Function to handle item addition\n    this.handleAddEvent = () => {\n      const newItem = {\n        id: Date.now(),\n        // Using timestamp as a unique ID\n        name: '',\n        price: '1.00',\n        description: '',\n        quantity: 1\n      };\n      this.setState(prevState => ({\n        items: [...prevState.items, newItem]\n      }), this.handleCalculateTotal);\n    };\n    // Function to calculate the total\n    this.handleCalculateTotal = () => {\n      const {\n        items,\n        taxRate,\n        discountRate\n      } = this.state;\n      const subTotal = items.reduce((acc, item) => {\n        const itemTotal = parseFloat(item.price) * parseInt(item.quantity);\n        return acc + itemTotal;\n      }, 0).toFixed(2);\n      const taxAmount = (parseFloat(subTotal) * (parseFloat(taxRate) / 100)).toFixed(2);\n      const discountAmount = (parseFloat(subTotal) * (parseFloat(discountRate) / 100)).toFixed(2);\n      const total = (subTotal - discountAmount + parseFloat(taxAmount)).toFixed(2);\n      this.setState({\n        subTotal,\n        taxAmount,\n        discountAmount,\n        total\n      });\n    };\n    // Function to handle changes in item details\n    this.onItemizedItemEdit = updatedItem => {\n      const {\n        id,\n        name,\n        value\n      } = updatedItem;\n      this.setState(prevState => {\n        const updatedItems = prevState.items.map(item => {\n          if (item.id === id) {\n            return {\n              ...item,\n              [name]: value\n            };\n          }\n          return item;\n        });\n        return {\n          items: updatedItems\n        };\n      }, this.handleCalculateTotal);\n    };\n    // Function to handle form field changes\n    this.handleFieldChange = event => {\n      const {\n        name,\n        value\n      } = event.target;\n      this.setState({\n        [name]: value\n      }, this.handleCalculateTotal);\n    };\n    // Function to open the modal\n    this.openModal = () => {\n      this.handleCalculateTotal();\n      this.setState({\n        isOpen: true\n      });\n    };\n    // Function to close the modal\n    this.closeModal = () => {\n      this.setState({\n        isOpen: false\n      });\n    };\n    // Function to handle currency change\n    this.onCurrencyChange = event => {\n      this.setState({\n        currency: event.target.value\n      }, this.handleCalculateTotal);\n    };\n    this.state = {\n      isOpen: false,\n      currency: '₹',\n      currentDate: new Date().toLocaleDateString(),\n      invoiceNumber: 1,\n      dateOfIssue: '',\n      billTo: '',\n      billToEmail: '',\n      billToAddress: '',\n      billFrom: '',\n      billFromEmail: '',\n      billFromAddress: '',\n      notes: '',\n      total: '0.00',\n      subTotal: '0.00',\n      taxRate: '',\n      taxAmount: '0.00',\n      discountRate: '',\n      discountAmount: '0.00',\n      items: [{\n        id: 0,\n        name: '',\n        description: '',\n        price: '1.00',\n        quantity: 1\n      }]\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.openModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default InvoiceForm;","map":{"version":3,"names":["React","Component","Row","Col","Button","Form","Card","InvoiceItem","InvoiceModal","InputGroup","jsxDEV","_jsxDEV","InvoiceForm","constructor","props","handleAddEvent","newItem","id","Date","now","name","price","description","quantity","setState","prevState","items","handleCalculateTotal","taxRate","discountRate","state","subTotal","reduce","acc","item","itemTotal","parseFloat","parseInt","toFixed","taxAmount","discountAmount","total","onItemizedItemEdit","updatedItem","value","updatedItems","map","handleFieldChange","event","target","openModal","isOpen","closeModal","onCurrencyChange","currency","currentDate","toLocaleDateString","invoiceNumber","dateOfIssue","billTo","billToEmail","billToAddress","billFrom","billFromEmail","billFromAddress","notes","render","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["E:/invoice-generator/src/components/InvoiceForm.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport InvoiceItem from './InvoiceItem';\r\nimport InvoiceModal from './InvoiceModal';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\n\r\nclass InvoiceForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isOpen: false,\r\n      currency: '₹',\r\n      currentDate: new Date().toLocaleDateString(),\r\n      invoiceNumber: 1,\r\n      dateOfIssue: '',\r\n      billTo: '',\r\n      billToEmail: '',\r\n      billToAddress: '',\r\n      billFrom: '',\r\n      billFromEmail: '',\r\n      billFromAddress: '',\r\n      notes: '',\r\n      total: '0.00',\r\n      subTotal: '0.00',\r\n      taxRate: '',\r\n      taxAmount: '0.00',\r\n      discountRate: '',\r\n      discountAmount: '0.00',\r\n      items: [\r\n        {\r\n          id: 0,\r\n          name: '',\r\n          description: '',\r\n          price: '1.00',\r\n          quantity: 1,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  // Function to handle item addition\r\n  handleAddEvent = () => {\r\n    const newItem = {\r\n      id: Date.now(), // Using timestamp as a unique ID\r\n      name: '',\r\n      price: '1.00',\r\n      description: '',\r\n      quantity: 1,\r\n    };\r\n\r\n    this.setState((prevState) => ({\r\n      items: [...prevState.items, newItem],\r\n    }), this.handleCalculateTotal);\r\n  };\r\n\r\n  // Function to calculate the total\r\n  handleCalculateTotal = () => {\r\n    const { items, taxRate, discountRate } = this.state;\r\n\r\n    const subTotal = items.reduce((acc, item) => {\r\n      const itemTotal = parseFloat(item.price) * parseInt(item.quantity);\r\n      return acc + itemTotal;\r\n    }, 0).toFixed(2);\r\n\r\n    const taxAmount = (parseFloat(subTotal) * (parseFloat(taxRate) / 100)).toFixed(2);\r\n    const discountAmount = (parseFloat(subTotal) * (parseFloat(discountRate) / 100)).toFixed(2);\r\n    const total = (subTotal - discountAmount + parseFloat(taxAmount)).toFixed(2);\r\n\r\n    this.setState({\r\n      subTotal,\r\n      taxAmount,\r\n      discountAmount,\r\n      total,\r\n    });\r\n  };\r\n\r\n  // Function to handle changes in item details\r\n  onItemizedItemEdit = (updatedItem) => {\r\n    const { id, name, value } = updatedItem;\r\n    this.setState((prevState) => {\r\n      const updatedItems = prevState.items.map((item) => {\r\n        if (item.id === id) {\r\n          return { ...item, [name]: value };\r\n        }\r\n        return item;\r\n      });\r\n      return { items: updatedItems };\r\n    }, this.handleCalculateTotal);\r\n  };\r\n\r\n  // Function to handle form field changes\r\n  handleFieldChange = (event) => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value }, this.handleCalculateTotal);\r\n  };\r\n\r\n  // Function to open the modal\r\n  openModal = () => {\r\n    this.handleCalculateTotal();\r\n    this.setState({ isOpen: true });\r\n  };\r\n\r\n  // Function to close the modal\r\n  closeModal = () => {\r\n    this.setState({ isOpen: false });\r\n  };\r\n\r\n  // Function to handle currency change\r\n  onCurrencyChange = (event) => {\r\n    this.setState({ currency: event.target.value }, this.handleCalculateTotal);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.openModal}>\r\n        {/* ... (existing JSX code) */}\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InvoiceForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}